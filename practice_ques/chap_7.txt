1. What is the function that creates Regex objects?
   
   re.compile()


2. Why are raw strings often used when creating Regex objects?
   
   So that backslashes don't have to be escaped


3. What does the search() method return?
   
   Match objects


4. How do you get the actual strings that match the pattern from a Match object?
   
   Using the group() methodn on Match object.


5. In the regex created from r'(\d\d\d)-(\d\d\d-\d\d\d\d)', what does group 0 cover? Group 1? Group 2?
   
   Group 0 covers the entire matched string. Group 1 and Group 2 cover the first set and second set of parentheses respectively.


6. Parentheses and periods have specific meanings in regular expression syntax. How would you specify that you want a regex to match actual parentheses and period characters?
   
   Using the backslach '\' or the escape sequence. \(, \), \.


7. The findall() method returns a list of strings or a list of tuples of strings. What makes it return one or the other?
   
   findall() returns a list of strings if there are no groups in regex. If the regex has groups, findall() returns a list of tuple of strings.


8. What does the | character signify in regular expressions?
   
   It is basically a 'either, or' match between the mentioned groups and the string searched.


9. What two things does the ? character signify in regular expressions?
   
   The ? character either means “match zero or one of the preceding group” or used to signify nongreedy matching.


10. What is the difference between the + and * characters in regular expressions?
    
    '+' character matches one or more, whereas * matches zero or more


11. What is the difference between {3} and {3,5} in regular expressions?
    
    {3} means matches *3 of the preceding string, whereas {3,5} matches 3,4 or 5 instances of the preceding string


12. What do the \d, \w, and \s shorthand character classes signify in regular expressions?
    
    \d - single digit
    \w - word(alphabets,digits,underscore)
    \s - space character


13. What do the \D, \W, and \S shorthand character classes signify in regular expressions?
    
    \D - single character not a digit
    \W - single character not a word
    \S - single character not a space


14. What is the difference between .* and .*? ?
    
    .* performs a greedy match (longest matched string) whereas .*? performs a non-greedy search


15. What is the character class syntax to match all numbers and lowercase letters?
    
    [0-9a-z]


16. How do you make a regular expression case-insensitive?
    
    By passing re.I as second argument in re.compile()


17. What does the . character normally match? What does it match if re.DOTALL is passed as the second argument to re.compile()?
    
    Any single character except newline, \n


18. If numRegex = re.compile(r'\d+'), what will numRegex.sub('X', '12 drummers, 11 pipers, five rings, 3 hens') return?
    
    'X drummers, X pipers, five rings, X hens'


19. What does passing re.VERBOSE as the second argument to re.compile() allow you to do?
    
    It allows us to add whitespaces and comments in regex passed to re.compile()


20. How would you write a regex that matches a number with commas for every three digits? It must match the following:

    '42'
    '1,234'
    '6,368,745'

but not the following:

    '12,34,567' (which has only two digits between the commas)
    '1234' (which lacks commas)
    

    re.compile(r'\d|\d{2}|\d{3}(,\d{3})*$')


21. How would you write a regex that matches the full name of someone whose last name is Watanabe? You can assume that the first name that comes before it will always be one word that begins with a capital letter. The regex must match the following:

    'Haruto Watanabe'
    'Alice Watanabe'
    'RoboCop Watanabe'

but not the following:

    'haruto Watanabe' (where the first name is not capitalized)
    'Mr. Watanabe' (where the preceding word has a nonletter character)
    'Watanabe' (which has no first name)
    'Haruto watanabe' (where Watanabe is not capitalized)
     
     
     re.compile(r'^[A-Z]\w+ Watanabe')



22. How would you write a regex that matches a sentence where the first word is either Alice, Bob, or Carol; the second word is either eats, pets, or throws; the third word is apples, cats, or baseballs; and the sentence ends with a period? This regex should be case-insensitive. It must match the following:

    'Alice eats apples.'
    'Bob pets cats.'
    'Carol throws baseballs.'
    'Alice throws Apples.'
    'BOB EATS CATS.'

but not the following:

    'RoboCop eats apples.'
    'ALICE THROWS FOOTBALLS.'
    'Carol eats 7 cats.'
   
   re.compile(r'(Alice|Bob|Carol)\s(eats|pets|throws)\s(apples|cats|baseballs)\.',re.I)
